<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<application>
    <packageName>com.evernote</packageName>
    <components>
        <Component>
            <type>activity</type>
            <name>ui.HomeActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.MAIN</actions>
                    <categories>android.intent.category.LAUNCHER</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>ui.PhoneMainActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TabletFragmentActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.EvernoteMapActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.SnippetActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.NoteListActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.MapActivityGroup</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.PinDropActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.PinLockActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.SecurityPreferenceActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SECURITY_PREFERENCES</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TabManager</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NotebookActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.OfflineNotebookSettings</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LinkedNotebookActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LinkedNotebookSettings</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TagsActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.InformationActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteListActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SEARCH_NOTES</actions>
                    <actions>android.intent.action.SEARCH</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.SEARCH_NOTES</actions>
                    <actions>android.intent.action.SEARCH</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.SEARCH_NOTES</actions>
                    <actions>android.intent.action.SEARCH</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteListAloneActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.intent.action.VIEW</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST_TABLET</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.intent.action.VIEW</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST_TABLET</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteViewActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.VIEW_NOTE</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteViewAloneActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.VIEW_NOTE_TABLET</actions>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>evernote</scheme>
                        <mimeType></mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.VIEW_NOTE_TABLET</actions>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>evernote</scheme>
                        <mimeType></mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.EvernotePreferenceActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NewNoteActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.CREATE_NEW_NOTE</actions>
                    <actions>com.evernote.action.NEW_SNAPSHOT</actions>
                    <actions>com.evernote.action.NEW_VOICE_NOTE</actions>
                    <actions>com.evernote.action.NEW_SKITCH_NOTE</actions>
                    <actions>android.intent.action.SEND</actions>
                    <actions>android.intent.action.SEND_MULTIPLE</actions>
                    <data>
                        <scheme></scheme>
                        <mimeType>*/*</mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.CREATE_NEW_NOTE</actions>
                    <actions>com.evernote.action.NEW_SNAPSHOT</actions>
                    <actions>com.evernote.action.NEW_VOICE_NOTE</actions>
                    <actions>com.evernote.action.NEW_SKITCH_NOTE</actions>
                    <actions>android.intent.action.SEND</actions>
                    <actions>android.intent.action.SEND_MULTIPLE</actions>
                    <data>
                        <scheme></scheme>
                        <mimeType>*/*</mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NewNoteAloneActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.WidgetNewNoteActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.widget.action.CREATE_NEW_NOTE</actions>
                    <actions>com.evernote.widget.action.NEW_SNAPSHOT</actions>
                    <actions>com.evernote.widget.action.NEW_VOICE_NOTE</actions>
                    <actions>com.evernote.widget.action.NEW_SKITCH_NOTE</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LearnMoreActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.EmailActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TagEditActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteInfoActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.FilePickerActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.AuthenticationActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.WebActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TrunkActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.SearchActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.WidgetSearchActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SEARCH</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.AdvanceSearchActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.AdvanceSearchSelector</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LoginActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.RegistrationActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.CaptchaActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.ResetPasswordActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.RateAppActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.DYNDialogActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.StandardDialogActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.ShareWithFacebook</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.ShareDialogActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.SDCardChangedActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.helper.URIBrokerActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>stage.evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.stage.evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.billing.BillingActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.billing.LaunchBillingActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>stage.evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.stage.evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NotebookShareSettingsActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>ui.EmailPickerActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.client.EvernoteService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.ui.helper.WidgetProviderService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.client.SyncService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.billing.BillingService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
            <sensitiveFlows>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.EvernoteWidgetProvider</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.appwidget.action.APPWIDGET_UPDATE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.EvernoteWidgetWSnippetProvider</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.appwidget.action.APPWIDGET_UPDATE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.WidgetUpdateReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.ACTION_RECENT_NOTES_CHANGED</actions>
                    <actions>com.evernote.action.LOGOUT_DONE</actions>
                    <actions>com.evernote.action.SYNC_DONE</actions>
                    <actions>com.evernote.action.CHUNK_DONE</actions>
                    <actions>com.evernote.action.NOTE_UPLOADED</actions>
                    <actions>com.evernote.action.SAVE_NOTE_DONE</actions>
                    <actions>com.evernote.action.CONTENT_DONE</actions>
                    <actions>com.evernote.action.THUMBNAIL_DONE</actions>
                    <actions>com.evernote.action.ACTION_PINLOCK_STATE_CHANGE</actions>
                    <actions>com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED</actions>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.ACTION_RECENT_NOTES_CHANGED</actions>
                    <actions>com.evernote.action.LOGOUT_DONE</actions>
                    <actions>com.evernote.action.SYNC_DONE</actions>
                    <actions>com.evernote.action.CHUNK_DONE</actions>
                    <actions>com.evernote.action.NOTE_UPLOADED</actions>
                    <actions>com.evernote.action.SAVE_NOTE_DONE</actions>
                    <actions>com.evernote.action.CONTENT_DONE</actions>
                    <actions>com.evernote.action.THUMBNAIL_DONE</actions>
                    <actions>com.evernote.action.ACTION_PINLOCK_STATE_CHANGE</actions>
                    <actions>com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.BootReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.BOOT_COMPLETED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.SyncNotification</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SYNC_STARTED</actions>
                    <actions>com.evernote.action.SYNC_ERROR</actions>
                    <actions>com.evernote.action.SYNC_DONE</actions>
                    <actions>com.evernote.action.SAVE_NOTE_DONE</actions>
                    <actions>com.evernote.action.SDCARD_CHANGED</actions>
                    <actions>com.evernote.action.DB_READ_ONLY</actions>
                    <actions>com.evernote.action.DB_OPEN_CREATION_FAILED</actions>
                    <actions>com.evernote.action.DB_CORRUPTED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.sonyericsson.extras.livekey</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.StopAudioNoteReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.ACTION_STOP_AUDIO_NOTE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.billing.BillingReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.android.vending.billing.IN_APP_NOTIFY</actions>
                    <actions>com.android.vending.billing.RESPONSE_CODE</actions>
                    <actions>com.android.vending.billing.PURCHASE_STATE_CHANGED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.util.MultiUseReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.ACTION_DELAYED_NOTIFICATION</actions>
                    <data>
                        <scheme>notificationId</scheme>
                        <mimeType></mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>provider</type>
            <name>com.evernote.provider.EvernoteProvider</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
    </components>
    <newIntents>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3gsu2dtcnqlvuui7o77ntqucsb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vpncu02sg3sh2uhb6ffnmprrkp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>j9h0762ddpnh88eul2d8ke0qp9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>eqent1brsrbfj0vpulff4ko6ic</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ct5rqf3c2pah9ft2h67j9hd8is</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>30rmlis34ul5etkkn774i7subc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pjp8o969coroc2g4cq7qpkv4pj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>tus1j1dq4vme8t2trjlpm7ko6t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>8nd4ooi4g34fqgl1r5lphvvk5h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dpob34a3n6sbn6uhqvp74v0fi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u9864d5mt7stghc370q9crfhal</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.SDCARD_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ml25a65i5uee7td7khcavurog0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qokv79uoks46nrvs079da5sond</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>afun7hn8schmv9k9blul2s14b1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jhevf5dm7r3p289auf0tdtshda</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>s7alkn99cfpkc590f4r05fvngl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>69tmdmpi9aqqehots7qbns1b0q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pu728qsm2tgc7k83fpngu56ha2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3l5d7hsqpp1tqlbo2jo5ph29qu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>t53b5abcmbdjootm97rmgjudcb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>eohs4giu4g72s8c25r4s6cbbvc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN_PREP_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3g6kh07n28en9m9c3qj654k162</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>npjnkjecakboumb9lpucjgg7v8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6ceqjm6spn2c8oj7lrod7skn2r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7rlss9q6ovdo6nnf7j014u9far</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>sgrq92ses1htrnqp4aaee4o5qo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gqq2h2pl2li9acdcke4rj6hg29</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>41r1obk9ovt5jbrle88u7qg2oc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>idhfvae1cdvvn72fhgfcdarv9m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8du44nu1u63pl9orakt88m55a7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gs1ftbuilgu19nlv6j6lvhijkt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>sja4pt4aacte2i463n41tb5f4k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_READ_ONLY"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1qhgerql6on0j25ka6cklph39b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6j0h783a4u2p7kiaed1uqosvhm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mkit9d23ntb8r1l1l5a2kg72fn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"android.intent.action.MEDIA_SCANNER_SCAN_FILE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>8bjmcl61jpmp9eoe7p871olngr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2p15rbb74fh3r7793bhm8fdpaa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hpm6ndn6dl82n3vng1f63gee9g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lrulbd4f64uj52aa6qvqs1tobc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9c1pee2g8q7nv4b5mrgg0blahm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RESET_PASSWORD"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dk0t0q8v30jbjndura2bnnafed</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>d1umk5t2sdghrj0lsroa4r75t9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9tgri17v2gggkvas1v6unusosp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>d5au5pcah176sf1h729p5vb919</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lak90lscb7p3cdhlpo7d61qkeh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6jr9kdoputaol3hrpu0ls7m3va</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>8cpn3bo8j1ic6tb0b8qlcm33r0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jnc1gj0rma0vecf1jun0j3s36k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>18q7fkvdod6tlpgs2rvgcrb8gu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>mqa4j4tpoqd3ucdfpf1g6tohoo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>nqpt4tgns0ka9rfmr1444rt3vv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6drg7d5it8sq1ds89ea8oirpn8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tqvedmnadhki36rd85o0aalfa4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>aqbu22d7e5t3lr2b48m83eh4hu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>95rfdtb2a8qdecgoerm2j2609t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3isprird3rtoc4ngr9ji4n70oq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>bkc7l9mq7v0q1g7sf2hmmjvhfj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>85k04o2c61e3qagqv80jrm4bbs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jau2jqvid816c7lep0q6vgnj52</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i165grsnefdcttshhcvelgsvf2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5um12vlbmkmur79u9r6vtvlabj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_CACHE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bkqhqub3141sqa62i1aan1ammv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b06bfr37b47ecdumpchkkttsbt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bbnvo941471dgvq97kdr31kb4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>k3hauiaehcj8g8cualh7l64bpk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>odrpi1h76r6v332rmpja7t1v4b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>v8i2vhr6e35buvmt0tkeo9vkep</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pr6mh02vqn5lfbdvs2ovph1ffo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bkl7prfi1rj4tf136d1b5a9ngp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>jl6c00dk0rclsok46s1o4ohc1i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>vainnicq68kth65opk80j93hae</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"android.intent.action.MEDIA_SCANNER_SCAN_FILE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>js4j4c2618v6kumklnd8ltb32b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1u5t91qpq6kfqb3cb835vj6sm6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jhqdn5emds9nnq127ijubn4ckv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rergtioaim4hbifaugrcslcf8o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>69drg5n0tf454sd9845bvgbco5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2vdp9mentep0oafmldk9da5d0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>4q80ujttrd99657llk9rsfbe3e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RESET_PASSWORD"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5jjfdl7778jg6bgkuc49ur2ff1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.TAG_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>i75tfqcs6ta17gh1j4ucfhqss8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tmpdr4m9vttvo73espesf59mpp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qlqde6j86ttp4pc8es0k0iecgp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hj95em6b5tb5aj411dg5k14usu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6i60vvmtlcf09lmvevl84aeiou</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>abqc76r48ki244mnkjqevqddrs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9r9vp3pcs7tbvgtvb81gk1fed5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_HTML"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4ujj11n7ijp1jrmgd2s2h4sns7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>p70sre43i9gsoapuksqg690c1k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>h6erlbcl1mrodiep8tq9hrfpo3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>desjpgo8bjlj2n3vjspkvm3pnh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>crn2m0hs0vg568qroo4jrc5bpl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bipp5lav398iga39pvund2h9u2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ko5avvqd9vjt2507l07agou7f3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fsvaf5616qviq7it5kt9h198nu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.STOP_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>m6pf4ga6to8r6kru6b3ens7a0b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGOUT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ca7q29dar9h554hbnb41aoc8go</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lm3rnd0n68nlhbjgvu2sl0g0bs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6j5ndq7a3e4eh2tvpahgt7ci14</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>m2tobcatcuogu0u6vev23b732k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>91tcddvc9th8duv3h1qovivrau</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7q0bc7srkglmrgo25sd47nnjqt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>sobucnfgho5pep8chg36or2a8r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>u567886h2vh9e04d2944ncb6eo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>e8phrat2urhj1om9p5nqejftom</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGOUT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ge1gpg99trlvg41ccs5r0u9679</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kvursfvc4hr3g46fs9fojb65c3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s09bumj6t9jfgqnc3qvl15q3t2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>orbv5frj42l0hqqne7qr0nna62</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>ja9lteoi3k4s1thavunpdbk932</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>b41580h5ssc3flrtiabtl8nq1f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b1g73rncdck0eo1acn3ca4brr8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>r4j7jgscbvrqo6bmklq40u28ga</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ivmrakudb78pvn163lomvufafp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"ACTION_LINK_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hpi8ltrl40mmbnoccqvvo3752g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CHECK_USERNAME"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o9sjnl9n4mv5q5u42pr6s9oteg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>unu8256im3l8qjssnblmeecsdf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mngu9q19pu6qv61uqhn2o3fmf9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a7cv0shj5l321kv3ib04iscdnv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>87h8d95j8l1ujr244b37lkc3cp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>t03vv3io5tje7d6dr7k2gnllll</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>s6qikm0q998u9btmkumnentm76</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>kckd40rsnkgvd0tkail8n4jeqn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>or554lg2r25dciq8vmt5b3q024</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>68f9gcsajengbda432g3q4bfk5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5aaktg88124p32s4qojopa6c0b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jd3v1s2l0l0njv0gp0c5gjltvc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6m8nn5gbnufvvq1u5d0ovvcssl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ep0tca0q62sntjbv4phdri3aj8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>"application/zip"</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>iqlb6frvggn50le405pqqbi11h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2ovaoi9mu8s5g2ds33rhtdi1q0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bpsqq1nsbj06oedh2vkrds31jj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>iq838ev9u9ffj1nbd15e6qth76</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>db27sop7habp2tn433tq61f44c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.METADATA_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pbhn6kskvesedadfa9vo1sj5ek</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cdcj6ms6qdvgk94uf2qfr5f352</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>2e01dme7f24rqnocpvvc3nr1hs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7sv5q5njsfus8e6ddkbd27mevn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.RESPONSE_CODE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mupk8jq3rj124seaf1vlmcer5n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9hk95222pflcneq7elmj5j12p3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kp8ls7797n5qje6ut11t1p01qe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dmk15e7fmi2f8fvefmbpoptu7l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>sgu59tlkioj808kpe08ogsdi60</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>8aqion24g84tgt5v2o5a2rcdv0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>brj5e7tf7kpu4jc4c7t3i1qeie</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9eb271jckot79naragrvq794lo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>dlo4pvnalmb4mmlhrbgteefp70</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>tjsh92dihfdhvgj4bvtnk60a6d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1h8hqu110tf6pg1vn3ej1lk92f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ctorq6tlgivc813bdilld690hd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>o6cvk6ic5i5e6q7c843sehm7qg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>466oc6git5p70l0trq3b5deuru</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>s0ebcf13k4qcrtk305avmvi73t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h173a5ubdp923t40fvi2fipn94</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGOUT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7mcidt5cjlphclt665k4heqtdk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jao6nbl8rskp9rgatnt7vgkp7g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7ttoivm6sam5odr1r1b2nm0k66</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6o7oajr7krle3fi1gb3g55god0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mpss5gavr4jcbvce93esdv1uqp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>mhomljukht4b4duhh6hrus28lo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>315bovkg6iguv2ma7tsoi1qnkb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8h4hgc8umokbilt04ngat1u2qk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>f0hbbn8pdkbbluskfhuejkqkeq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kd82ga8j19iq4h297n805dgli9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hq6rkjckt0f7kg3e7etd4sdoaa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>21frc6hjj1jjg8i4dm9hcm1oe4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.SDCARD_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2t2pb9n86532f6e0as5pd3ps23</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_HTML"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>et8jss2us51b7s62h7f0aksvst</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>le9kgthgcofanrmp1k4agrelfs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3qpgsop94uas9tnmvc6tp4rqam</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.PURCHASE_STATE_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>794l6dsffkmerq2us1mefj50g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_HTML"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ei5h9gubt544ca1gu2nvtss9ka</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>j0ug9a33utpksfimbb9q4151hc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>l1hpbnqivplpj0o3nrqvbvvm4u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pul1ddqo7g3fkvomcvo48g4cm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pkuuv7ul9lufl24pfif9vj9bmq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1ed7ebuakg293rlfd411dm9hum</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9a780ctbiir1s6dgdo842ahj8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAN_SHARE_DIR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>82bh9vos4j674oi7me1og76nlo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ov76rpvfmpsf7868tobsuoo1si</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2v7sp3fds41afk3t967hht5d5n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>686up4it7fnhce59bdfg2rts5r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fnem2k3cspgl0otu8e2h1es92o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>76cc33okoduh6uq1igst1ht8bb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jn377pf1dauc12pllku0jh3766</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>"com.evernote.ACTION_STOP_AUDIO_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9qg89v173lmsd4867jm10p3gfg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kseuhpo2ptgig9s8pcqkc134g3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kab1i7moe8r5mk9lpoiunuaf3s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o11pl85nfsavj42lias98b2ra</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qs4pdk1ki7qlqm9o3mn9u83gfc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>k02oe4rc26j2farkgc2u18k3fo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8no0ln85u6hnhq9gi2sk1qnqpa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>aru8om09pbad6vq39eres3uce9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>j7g3lp1c2hbc75sb4bmhvhs35h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_RECENT_NOTES_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jgga2cf39mtq5a9g18on9q246s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>baosmvgpqvavf7pj61rd1qv4g9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>v3mbv299r5t70hugjcpkf0p7me</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qjj1cv5b3gmv9ht2g86tvrsa8n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>mb5knt19addoqt1rkng39q5ge1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jdadv4p843rin2gbhps2fk1mjn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7141reqv1to7atk75okmpieu60</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lli1469tjggt0s6mb5p0330cp1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fd95r7cilu30oiakqbopk7bk01</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3lcff2j0e7kr1fmctq2tt56mhd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pdlak90u597l78odsiechl38tb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>s7nu36gafnet16kc69hqlf16u8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l9ljc1s1kc1k91tudbd3364d80</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>he53fr1fknct86nstcrtftjr7q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>h3lq028unsdlgn2iukcvcg9fhp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>s8nsf0dq7d0f178p1at9us1hin</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5port8p81iins2aigdt4s14n6a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>"com.android.vending.billing.MarketBillingService.BIND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>gdv5jkenled9r2jqk2emql43p4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6j9ovs8s91r3epvjsiurnae9rk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.SAVE_NOTE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>h7nd3k5um8hdlgrnma7q86fgt7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.PURCHASE_STATE_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>agn9098mkmvgte7b5t9vcaejvi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>qtasvkd5qe4b7i8umtrfvrenic</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7e1gop8eb4q8dhsbihbp41r9mg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>n71tmcbq3g9ju54g6c6oiqvqna</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>jo3vr5qtn2tj4pbld9g009h96j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.RESPONSE_CODE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>asgsnmh7d97uobcr247uvv457</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>e5o98nj52akdtg6k4co7obsfa8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAN_SHARE_DIR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rrks3acnmjf0kimjbrsb7ackb5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>mdftkdhu0ddt67tsu79outts4c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>keh5ctpkmsjg41pi6bkfiphru8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>q8b2g8aqf8gh6tl4ic8akkcv77</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u4c2nt9ehf8qkucv7okfpnu4dq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h9uv945hkdhe70loap4nh6n8c4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s0avfr8ekgo0ht7016p4o6t6me</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>60k1r9g7okhc0gchpqe7nskpbq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u2qkq23daflqiqthnfamato6hq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5bh2dmclrksttv20q4ahmhgdhq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>bguk03rdognemba32i5k1oabnh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4r1rp85ju95tgk1p0cpplrctoj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lvn91v7ks2cmg0b12ins350et8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>sm2h4o30aus2a7n92460m3c2lu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>j4ogtg8lmk1nqo7fp6njq4n3n0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ecq79idct6n7j7nro1kbi7kumu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>krmktgtsmrf23em1mqbokt2n6o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a3jhetdrlkn5ve9p5etjtj4aus</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3hn4tl4psqqtckjobkgqso9dch</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s9q9ccbqj0cn31kaf7dlc4ppkc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAN_SHARE_DIR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2hs1gi369in79qc29hgj58np5s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8cejpksqir36ojvqdm12pkgf1p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hglpqfkbv69dbv2vtjvet13ei6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>f5ikl4e1hmvlgjmaue12ictpq2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5kvdrnlt3q0is3dv77ehogr4ig</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vn1of3icn9hv7spkldeil5980m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nqkp24f6o20bbng73s7161vlo3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>i1fesrvjnt1qpgoc1pvlrn1v1i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>"com.android.vending.billing.MarketBillingService.BIND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>p2btrt079g2er5fteisqlnu8h8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>p74utdioj8chec67gc63ksv00c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pngv4kqlula28ou7rfrpsaccr9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7falp39dc25dcr1h6lo0go4j06</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3jdnurhu1h5hnhasdip92kd4h6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN_PREP"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qd0pr0hf63p2g767iuoe78dvsa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>hbsam1k7g2u0rvr14b7q403l6c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN_PREP"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>oir4b0o4c08qb44profqbis5j0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>8ebb03ol5lo5bm9ec9jmv8mh5j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ea4cpuplvntkimntrjqqd4ckn2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CHECK_USERNAME"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9eck32cmj5cnfr38q8nva3or9r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gndfqf8inb94f0o4np9tbss9e3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>746fshmj1ehhfso49hjt2ir7re</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rrhhrhk3hmim7pp0iv22iaotmj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lkl6g1h7acpekq7ddlua84kusk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>n6tbokgvp60pr2d1i8vt3cddgi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7jlufjt7duuecmb06uphv3cjp1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8mr5c3ltum1eto0mfj39h0v8fv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2li5ig6m6g6r4494172fhoep6h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3q6uul0sm42skl7brcgt1qtokk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_RECENT_NOTES_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pagdascbqtc0vmq9ee44gps3eh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>hut8bfn5jubv7qp5b48bv2ivn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jjl7gkhvnffsgohqdpp0n9fth4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.PURCHASE_STATE_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5uaeo9t0o43u2a6mir8657qf8r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kdk2mc83is9pudi6kptea1h74n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>rq1bi3hegijt69k6l0fnvoaroa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>o63cnc20dp2j7auikak244n0bb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>98v1de2of0qgv57e1l01pigimd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>r1vrq3k5il41kkl8dt7pmiq2ak</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>"com.android.vending.billing.MarketBillingService.BIND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>1b9desft2t5kpuiqtplplp2mfv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>nmujt1od9a9ogjam0hil4hhqlq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CHECK_USERNAME"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6iju2e4snbt54757bp9jq8tnh5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7navko73u0iui0epode88ensue</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"android.intent.action.MEDIA_SCANNER_SCAN_FILE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4pln8kom8c8oev7agbq5l1qqvv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o3b39nhu4qt2nccl24ojosc6h9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>80mnuegmpcboqjngatvnikoqjq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lqi95p4bv50fguevv5ia6edqfn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"ACTION_LINK_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>8oge7v75rbet2g3pme2c2vhnaa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pm4a4d3b9rjtjieft9hgfpvdtd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lj0q3lf46r8gdcn2u9fbumhit9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4k8r7tt65iegb4ooh7o58td5ae</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>i27681dn6kbi90ol9s8k65d67l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dmrs1i5aoiounamvjcpluemlle</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>g441anptt7l3n9fg8je651oomi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>jli4mig1rb4tdrtsjni48ge74i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>7vf1uu29h8omoc30erpauf2jho</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1170ks7lmse0oqmmv6emcrf5rd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>aj70stluf4iffg059pmd3rirv3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>1fu71td7vf9h6i8r64tei18n16</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>a05osqapl0ppdkrivabld3790o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>h9qp7if1cs0m8od0dd75040jft</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2csbic6ijskd8tj859omdlr2nd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ldt683u98v26mjvvhddt26obi4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_TODO"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u4v95rqj13b51atmupefgae7a6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>d5dl4935b7hdclk9q2gb5720p8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>slim3t7skbhubv7f7p9fs0657k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>f1ohl4t89mae2h3viitbans6e5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>sllk5n2fo849747112ips3ld2f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>779o7nuk73d6dlcv70jtc2m41k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>m761arcfb0s6skv92sgsj4in40</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nt5td5kq8ovjdqc6dc0i7p7gvg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>g663taaejo80spiekm0sv7d4gr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tp968oposm7brd0dqllartgss2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qea0qsd9vn7i4jbrqh1hm00t1b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3c95bntqip4tfgdkkbmldmk5k9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>qdlpk33m2ou5bk9t0rv3o9ktka</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>e5ps8fdjrq4nqp2sust1hggmag</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>usp5mo2ujbnfo6b7k2vqnsa5bu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>drqf3nnn5t5t3lbi3g5hlbc073</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.evernote.billing.GET_PURCHASE_INFORMATION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vsau54n7ikuv00i9nmngqvrnv5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l0vbsk1np97hecvruvasd79v9u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kmi6rfi6s2hk7j2trpm05982ab</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>cg9ej92hnnutgh1tdpemtmf0gh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dgm0bj106jdlf6u58uf218do62</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>78d4lmbanh6fo3vihfvf7rc2n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mtknvgmj2p751c1ghp3rohj339</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_READ_ONLY"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4k6v08378a1b8dogg3hbbnsn7j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3qtoe4f6oaqi1cmcj17is5jkvg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dqogb8imlpb3pa5h77gdmin63c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4556us7rkoi2pdtrviul3dm3s4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lpknlo4lmbqv2d2eftd8d33rmb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>re347o782eg716jn10mdkhevnk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fhehq5tf3bhv09dih5q2ur9a77</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>smkm45g1hr7ljmmjm1mjmg38s7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>33iktspipl8is1dg8p84nb0d5b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>28huhahsvnsfvlpkubc48ndha9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n253n5u841pdc6ls3psg4bu7pa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>eau60t1thpio0c22hg6fdto4nc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1j6i6q9s56hjjckn4au2ohjki3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>c9oad9ehdnk3cr378gad0ljpf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7k8vvbipjr5qb4kdoukfki1u9h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3576ve4sk9pb7021up5tel6t6k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6vg9rij7kddvm0lqvb3b66v0g0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>61je9cqlkpg8ll4hlcr8g1i2j9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>th8qd123b9fpp0nks589dcugmp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.TAG_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8elvmh20bodatf242p8769lco1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pbluk42og13c0c17rblgli2fl8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>8qgo29d2eq9ha896ortrsj613c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>m6jasv18827eoq08pae91a7djj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>j1spgvqkb5qd374i8t4lo5nsnj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kercipcfu8k3kmkqhpr40khdn3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fcmnf5632tdsglqhgbiglsp975</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ro8jui0n297catr49q4cd5307q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>k6u59m5671e98tiglc0f9bnl2h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>tketg4d58d5n2kkr2d5djb0fur</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>"application/zip"</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>uijfdeh6qo8qeo051q3mo1p432</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>eq3u1c80c46abv1p0u1vps31ut</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jlaolo87ssn1dvmv1fi7ninkaj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7472ptc7b3b3k3l37o26ujd8ai</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ie099ul9ain4njjko714i20rda</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8se9iabgvvc38cbuatcmo50sql</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jaur8i7dsm7asoqrihj747i440</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qsm2sc871eb9fo610ubrae535t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>evkcgncugrb4fa6pgtqda6lvhu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>n7dobdsnjv00agmugmcuu96lng</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>j7vbljufak5nj98271frtj6cmi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fe6q7mcgmttdgv9qblfm76mir3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ge6911eupja9re0d5rijpduofo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7fted9et8mp4fr0063sr1i0qmn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN_PREP_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ab5jl7gnm9ifj19ijsspuccop8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p18mnfnius667ogk8cni0f76c9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>oj19a22pc8rohh13gj3dgc1h8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_READ_ONLY"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>26k4rt9tbldfajo8hnk0g7eqn8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dq0ijgnd8otk8dg7t3cg578du8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>q4su4tm35dig3ioc1ci699lafs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>q3obpf7jjchodaq0bdut7v8uts</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nehbic953o460buam96isijnm2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>m37sjg9p4nb2lk4h59grnuu0cm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jq5bd373i86sr66v81jtm9nhk7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8n3jladgdr4njmvaverct0ohr2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>j8otquioh65igi4jnacik9llbv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>i9ph9ep7a5ijh61uh9ghuemv6m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>b93slua14evbjr9u4lstk3577r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAN_SHARE_DIR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dkksnhpksljqorae8t5krgj7p1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>eaikmnlptpn9k2stsmbro1752d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5bqqqvts4315pr2otaca6oq9q6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ks4pd1i4r1a0lb281jcs8t1hiv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>igp35tdpp75m54rua7d6m1l1cg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mv35kv35gcdme6bgsgkkp705vj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9oqs1h3n9kdv2ocvl19hcknigc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>v8fl0f4ql637726jibgt4h86t4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.STOP_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3r7fuob5p4ea4iskhd4uepqp3s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cjo9u94m1tfdtb1ptirvdmb8cd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4g0hefpvbfkiq6roiovvrhs3dg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bo68l5g0vrtbnqn4md0nu44eqk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>u7rjtk7nculmhpiufr7kent6p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pmi15jvf2j9pjh8s916hkqqj7l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>34nnankevvubdg37v0ht2qjn94</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>k8ghecijiurf9l5vi3oi73herr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>a7ha58qt9f1aaqkvl551gpvsma</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>er6l5b31i0f3gh54fh34r5vapt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>il13klfp108rp031jcahhasl83</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>e9a3nf6jb4193q3ne676snh33c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>podms4c6auv6f4q73g8j37jvfu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fea57melb0vk4cdi1kk5avu42h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>"application/zip"</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>s496ou5dur3lucnj0jkuhs1urk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>62tk263r62ks22g7m1ojlr5tft</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bdd48imqjv0dcriaqagvquheip</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>qd2ad4hrpa7jgr43efcahc0djm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nijpmb36f6kfj0m1eemdijabmo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dthc4tsmj3g8rihf0b0b61pcgj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ia984iib0fotgusr4htj3t6ndv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7qvs7ddh4q3ci8mi883tmeh1h5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hvnttgjin36uoijdihlojcremn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_CORRUPTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rq0qaovah6lm5nf58ln1i7liag</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>fed007hu6ik3tno6lh64dp0qe4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>j0um7rollbikjnrmob7dmkp4hm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"ACTION_LINK_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>82e0le4v6p6vjt1dt8jojnj5hv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4bu2bmfigij5ol7c16qs8qo13e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>hn4hroq7v9ulcjvn1373km4aot</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>afs08l5dqutbfng99f8hc435hr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>o6o3se2gvdgskeuruq5sd0o9ml</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pfd4bor0mgler06rkg9ieo13si</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_CORRUPTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ltdpoo45bh4dp3qefn9s9fg6bb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6i64n4ks9n5inv9ptu554ris0m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>b89cv3nvu2bbsdjl5q113j32pp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>93956387ma7jfe5m9gl5igl9en</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>epdhem8b4op14d6oqlhksbq5eh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>juun1msnnp1mgr36mb8qbeeoj6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>msjbvsmo86ah7h73lnve8vc65i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pesskhs2uu2mlbepmu9tqojnp4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3rs02j881ree4s8t23p4s9hr89</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8ccub2p5alh68r7oa16duhqkei</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lokg38g80h15bdlulb63o0dqd1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fcnd9qs64v3nhnpvjjvd920lje</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>b5oafapk9g05b9h0ctor3rsdai</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>18cnutja68jph5rinm3c3e5bfb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rk6u6dm7bd33ksb4tkvpvgv0pa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>khjopmi6ls1t0k03c38gi1tdgo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>sk6f6f2sh884lpps95cp9qhfj5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nbglfakbh0avj0s4jsnj0v4tjl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>uejvr19ebk5a5l7qletqg3je21</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8cvs4j4b4b08uc0lj0hh8s2g16</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>11kaffc5ttsn3oglfg3qv55md5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2nur4ln13iorp0a0h5j322qq1b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jshp3t787ek6ecj7bv1ujtv231</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>d0cakaqkpprel3lguvtreocr09</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>6953i16kb87heagfmmel9vofu2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5rmgh4gcc1b6erj7r7e69osugo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pjk3b4pqh0i5smevegtfhvln64</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cf41cpoedor0ubht02jnjsh9pf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>sv6hbabo3hmlmefpoa4neldcv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>or8qsbno1gu1ta15r7dm6qh1mf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9dn6jj49d24uk9rpq0pe0afpjs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>m3r551fh658qob6thvirlgua55</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.SAVE_NOTE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fqplt0g1sh4gjvfr4i99pfc5l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>6o9fqoib6q8fqhq1kjsqeoseui</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>md80pngqohnmb3p4is6uupohlj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pkrohe5b7h2ssud9e28jj72pq5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>qjrj8e2k8nqiodpksubhccdd5b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>40asli84ttvdv32b1lrhjor8sd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>21lujahsjbgj2k8muds53mljsl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>e4mbpdeaqqnmnq04481dvml15</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>adp8df90qrbq4b8jdc9oosum4m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8b1jmi1m9us9u06jmaurs0t29k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN_PREP_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>c252puco3196lurol2ua1dh22b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.evernote.billing.GET_PURCHASE_INFORMATION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>flbrrcqce0be9lsoql71sm3huh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>velgchrjqnv8adf2qdd7v891f1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>np8io6vbftnju6ek6u08qe0i17</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pu0id8ghm7lmvoq02sjc6tfelq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qmnc3b6qbfbmo8vc5d2hm4hmh7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>mhm67dho0jjkdlbv0rrebko13j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>f40cp29mvks9qqu4tpp58nkomf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_RECENT_NOTES_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>itrgtpbadc07g38je9mv80r8if</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>foobj59041rebat6sg3pghqkdv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>c19rihni2ss85ssmr9sjh20ld1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>balvfg9s8k2fpm61nnujvqavg2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>p60qichhvpcgq9lvin8kc96cvd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lpfv1h4cgaadub03q89dij3hnq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ea2u1n9nr5f8ivoq3sebm7ajp7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ehchdie12vve5niet19g2urdi3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>44a5v1cdh7oimh3douurrveah4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7a7ma982ulrmba2sp0kscdj2v1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>rsincmcdb54e9ol9gu5cnikoio</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>javggfcijecbs773v47f5ln3eu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i7qbij0a82k60oallhv9f1vi6f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rqth2pl9faccsvc8cg4690ljdv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>q56vjt9vbbubcmpvgq0gsam5lk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>d53a078lcisk7rb63g455886fp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jq3pn1056q1g7b4jlr6sg5pfhk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>s5as24eno79m4k2j8kq0spq39a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>idfe6v3kg1tdoilug3p7ssmoap</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gcuiido4p15tj8nr7am49cehpu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lhn8ef1639c8f42sbn13gke241</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7qc3uh3ip01k8ss0d72hip1ake</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>oublsu2qmf57c7bn9uegv5detj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>v38vdr75f4igl58sdl3tbi8vf6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pa2k065ss3mf3tmvfqvf4fdg15</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>eabr5sl1tm901dkv6i01r5m2qi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_CAPTCHA"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ufdc6v14covjnjmlc11oh26e2n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>e1n53f7dbf789fsoabpve5smv0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3tdkl71e63o4bhsfjjhsn1nclc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>37fc0kv6es0fd7f1k18dfuj5ab</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>"com.evernote.ACTION_STOP_AUDIO_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7oi4a7bvdq8jpndeodm1ak2v2k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lnfed643dn7cq77ce0cdt2rsoa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7kklikcvnnljad8k9d6n2om2ij</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pg2u2a8p867jnljpb5bum5idir</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>ibl4livagca3g306qtkl5rbld4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gv3a5s0u41heeuqkpsh381oelv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>g3n4hdhmck82h6br34m1b908bs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>f6vgtrg55limch7cdvosvvgppr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kl1rpj0etdsthctqbe5qd0a9r0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>htgtp0iqg2vmgd0qnaoe2mgqco</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b5d5d4foqb2dh1uagaj5bie8da</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>e3072qpk3geotlpuh1o22patvi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>m3ad7dji0t4ktf3ogr1e7k40t7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>k58i8p4cru8g5m3jv2ufhl5nc9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p37umpjkh9it7o6kvudcp28pmu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>skpkidjg7pfe4erquj60fufg7e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d8igbbkduemabq7q3njrn3682c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CHECK_USERNAME"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>flj0m66kbbv9obrv6cr988kbgn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>n85jj0oofk0chkq833m1h4hi0k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dhk3j2ju3078hhunbre18uce7k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jsptsqh70ncqc3lr0k1aot791s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gchfj5l71hv6kn68sqce7fe3ta</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s27ej8cdvu855c4eatcuen9fjl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>c4shkpvsi2kiem2oa5d5dj28lh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_HTML"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9hob0i7ouqutsigs8dc3fvimdq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2kauaupul4rbop2g60s89567aa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>"com.android.vending.billing.MarketBillingService.BIND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>2ni1pmp4s1nds382q70d3mhf3t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9v8ed2cj0mi66ovrean49ilimq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>vca5mu6vqo0e9a0dj7k7bql33t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGOUT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7c6lkf1udn9phbbnqof613nceo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9sjhvt9tcbidfct2savsaesvir</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pu2rqv8ula7sbi78f9mtl45q69</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>b969emh18mqfqmpel1unks57mi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>21devqim2neqtp08jboo8kpeta</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1qgmbgp0147uhp8qsu6pvksd5n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>q9m7jfs9old7fleadg6j1s9bfs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9t2ldhgonta3bsunums23uvnig</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ie6kg7mavrnhge73i4mvlmigsb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tc44uuuk5h9896p1f9fl9c8nnt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5591snj4j4bvkb1egputd6pfql</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>bmb6u3ro8tktldt4ml9iln7fae</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_RECENT_NOTES_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2brssfto00balno7b9ll7502ad</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>cs83lc6ckvg5cdih4flmf3iqua</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>53ocgi7qdg4q1ml46b1k4uahq6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>neg4nri522hbjp10b650tvnr5t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o25r4sma8r6kelai609uqo9kac</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uosuicr4veoon8mf7n0hkrsdch</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b1q56ccmmefdrcnh7j5qt4md0p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ko6i6a16dur44k0s4s7l0ocf4n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.UPDATE_NOTE_TAGS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6kf8v67c8md7lgba78ldnhdhae</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p3tt2plqgqe2aqgoc0no5u48gn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>htsd5iapp9vtdikjei3uv3sgg9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5kob5p7f4h5up3s7r4broa1eus</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vjrcc4vkkjk8ckkk0p0j0pu3en</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>punuvtcv7ne15vflp6afpupll0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>s48jhalnmlmifg39cnai76ga28</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>lmr1otq39l5qafnt2qqaqg8m9n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qdabi0svro8bdbeft4fnhqn1qg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5d5gjcc08e6atb7f0kak98075h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>8g32n0lc3e83bhk55e9k0qp2f3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1jvanqt05igs2loua4eeeh6nvq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>70b01o2qimghsvsj0tf1t2antl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_TODO"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ku5tjf7trtc9e8rgp84m81vt0e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>4vjqjutbqdnp7sga3otcoks6lt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>psk0ubo6obqvojut24hpjkjuss</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN_PREP"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>r5c3l7uhfrtpb9lbbo5efdqpjm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d9q01doidtnlgee5gp2euftagd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bf0pm7e1882qvl3f2hmft26r3l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5mog9fpikit9o33v4keuaeknsi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fkgtburnp1tbbqm1c610bc7ivc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ab9f32g2ug53egln51tg73fnkm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>rm46shhek56d16qq6d0mto46es</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mj0f3mmp92b6dhb6go9k1btgae</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2nd0qoqni58ohthv7efgq5t7cp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>diq7ipo693q36sqf5lifli0gbr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>njgdl45t0t7c28jqu4b8gi2bn9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>q95da87atgo5odrgahf09q6mb7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>l4brmdltc2o00klg8t7co7iedr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>sdq139q74cpccuk3eaj9jcrmsj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4pase1llmd7ils4phvvgp4sdn2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RESET_PASSWORD"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9tnedij9n8gclegmmj0dkba9vg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>m4fhbbt0h16g1va53sc8bkk48q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jkjb9c30ggo2p5sa7aqnebf0v2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>8ipb90pe89vl71c9dkc8ce7kdg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>j1tkg8dp5drsggbic4pqnb9542</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>97rrlbbdpmug7d9us0t8s76ljf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9bn2ssgev0od1qav4440c4cbh2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>j1pahrualqo8tg1it3k5alcchp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kceb34v1sni5m6frl8iujjhuu0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hg3dq9ei2f1a4pmts5o1mb2b29</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_TODO"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mloc917sla52cgi8imj1oqjb6k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>n490tqgerl8oso1nv440onevh1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nlbqia02b49m2cbv7kvf6t7t15</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>r8n2pg2do48cvhusaid64nn358</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pgm69dqng074cbqv6kf3aorl9s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>mcdha51c3b9vujut8cokqfpqgb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>duou5uqtfsg1dg9eoeq6fqoebn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rbs1hh112664n2gm8cgkp9td4p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ntorassjvkg487ng6ikta1k5b6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3rulffqja2ij8qpoian8lmtd8f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a3it1790uvvav42bis47935qih</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>edl8rv77une280u7l1kek6j52u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fpkvltptgp4v1jhrn1jtvnl9ii</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>8o2vk07pfnfuc9fqftkhmm46al</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>cnbqilldap24soa6ou3nurk6j9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3h2edaupelo1418eitqq3f71af</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qp974jbfo0nrv2k6pm1qr2c86r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>h3p78j2s1b4hshgamoaestve54</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s4a3n2fvqbp1qc4gfnin7ou1po</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>t7fqvgc5tnrk2ev51nr9p6rn5f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7l41qabqq44s26hfo8oa4ppv4i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>rh30iscubvlu3hes193lahke8n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4n58bltg0pp71maorsormskl4n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qjkarlnj65c2gla0nkvh22lru7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pt4mv9a2776ontdm7tt7q32dsu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_CACHE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n0khmj3u1p7r5j2lguaihepcb8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>e6obiq9m5lpe7cnec201mbouhl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2pi7fm3vsbue545ec4nmnbmgru</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_CACHE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ica2g4aghib61t2cjv6ms1mn7u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>f0livtko00dl0eqcjskr7ib6o3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8d1i9ogok3naho6h299b3qodff</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>1g4un56bdeca2c5nqf8gi0lia3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1ktc8e86ifqv7s2fo1lpu078ef</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bl6oetd9hvu1m57mvatess5scv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4secpmre12n87jpatp516j2uq3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9mcpcavhurq4kdvc9cblecjt4e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>e9ln225j9s8i91r4sgdpquu6ro</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fjacdf90qcd7kk9l1eeq7nip8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>39pdct29r0bc2g0co53hc7ejn6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4r9cu493nurvpd9pn0h59iamnk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pmevq80rn43prgtt6g7a4ivq2v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bis86b2cfvugs88dtlrmslefhc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bld7b18olta82qa2tddg7au740</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.SDCARD_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2arl9sd5numh2o70luqiqm97l0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>u9v9tfv6uedju8m3r8dr3u27pm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>42fo14gn0vu0k2k2rghb8tu5uo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_CORRUPTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gm7ksf0aguigv020ih4i40d4d2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tu7jpi6j7kkdhh59grtpff5vds</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jusvvn8rau54ba6bsk85r6cdgd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ni9u4to2e864s9og98lt6k202r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>5kcqgu6bafsmqu6ip10sh31qs1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nncqh336pqd1t5lb5mhra338va</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5jqsd4l8rmipv378h9cd45lnc2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.SAVE_NOTE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>m97tjdni4bhqsgei42vuji1ptq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7gppi20qn6oti9n7p4l6apmcea</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>os04f4jsec4knjhk4eqmg1dsiq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>gvhosu4nhousfh0l72ook20lgt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.PURCHASE_STATE_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8ab6vkeglpulerld5d3neaajrt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hoo6vqfejg81n6gtlipqb1l07</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3eg1ka0kecm3utk1laifmp81b5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>got9qgaorcki3ac3ns25j092o2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>29t7v65hmekb64d8o3lmmuo7g7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.SDCARD_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4c6o9bp3i21fhpmkhst9b8qmg1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ravaoq8q514dal07086nr7ftg2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>49u5ot3nmsfvaf6k4lnbajmd0v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>l2i56vq91a6lo1f5ec6d6epnok</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.UPDATE_NOTE_TAGS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d7nlfb41arhh2g4bs8f9une10</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gp14et41o9rt09obc3aa0vig6l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ureqab1hqm9suea7mjpp77kbch</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.SAVE_NOTE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8r3ssk3hifd3cfed8eo2phtc7u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bib6fs1mq9vj1q6tet74iru6ct</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d0it7afr1s2579ttg9f89pumt8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>dtsng7echc93qstgcn0ogv1ua5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hjtd5eivftefbclmdjfnmf9lsk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>j0i7d9u85ejelijsfuuasrm4a7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dl1aui9mjd64vpgop8sl6p9tuf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hkjfto03t6aucj33p89htn2273</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>48dff632tbadf8261bajve4jii</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>v06jkfqfhtd1ei1fr0572nrf5i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>g264l7de2rk5nr72a3hork4t4a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>uq0ee8monppb1ugi9ro2vnik85</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>v5prpr27hl4psl2l0lhv34c26f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hrjgbd7sgibd2jr6s642fkmrp5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>qk1g2ue61ldqtvpsgabb5a6me0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fqnoffathsj7u5vcic18281ckf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gfi9mleagn811usaovoqfp19om</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nkbia3r8r6e85ht6ue3tngc9ja</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.MOVE_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ta1hu1tdf1lo1qhgdcrjvf5klq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RESET_PASSWORD"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fs602u9gpi54j8jd7efb64ajmh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i59l1434fo8rq3qtgmhrkosofu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vmq15t5i824t037l6cql4g7rdu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nl953jj4q78rmop31a20s7ehmb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>3fdk9eb5gaaag22t69nubuv81q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2tlfg1qrkrojd3pi1dad71dg4c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5bci85c8k958kpfk7mn7amot3j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tltvben1nje90t6tpqn7eaaehu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>olnpgh953cu4hpo1qv9akahs4i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kp5cs6tscpu0vqdkpu9f6l0tk3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>6md0tfq6soaql8g60dt0v18m75</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4umf96b06nick9koibdgnki3ir</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>8r4g0uvl5chakob2j3cj6grukl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gs9peks190rqhj6vqhoeokct6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>aj5codc8ju4m3m0qfe09a9uopi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>andbhnn0jhqbl974tapaiik6vs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p3drbjc1qulja6gk1ceviifib5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>sdqda5dtn3vs2ptsobgl3btclj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>lb792jsb8iompedurjltsaqr87</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5do4ai79p1o1hc6rshu0b1a6vs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qjdave6u4hvu3oeemr8a4itcc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>h86pdd6inn1bnisgo4p1qkb8fc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>87hunm7butvpitheumtarc0gaj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>78e1nra4i3pui5ogfsbjvkaprd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>3v28gif049grvq7unohhputb3e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1b4sq1effog43eg9jkg1j1fg00</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>rd1qs2qrk7kmtub4qlgu00qf1s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>c8ru7415rb3s2lrhgb65agmbbp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>tn0qt9g2mf58dalnqv66jikbfn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mnlffqc171qqll3gu65j08a0o6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_TODO"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uhv2js9mdu4ma00vgvjvsmeojd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>mkljo10e671aa0omgjkg5vs33r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7p2kaq3p56srt4ur71ggkbb290</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>o7te5jphbfsf9tpk1ghig9ntd2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>j50m47e3hn09no4ulr0qbuf1m6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2isff1smhr1g4jas7ssdjvb9ge</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>g037kf8lgo7t3t5ho3l27t3msa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ugcaqql9jir9k35k4aeokofh8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7a867lv0so3pcevies9ivrkjjo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hfv9g3nnr69klnmsuv5a6u0b7b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vbb85i81qijim0q03hj7j1a4sd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>v389cg18i91lo1d9ehq9m3ie7d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>6b7457m00183ha5r0qsu39tek9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2lckh5hk6c0jlal2sv3edi72as</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lh1hpn34r5lquj3ndqfm76uoff</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i986rjamc8oe7lr3l6s64njcuq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kbhmajqsfdsrjkbcdri6fai2ni</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qv52jfqul46l32lafmv1gcb9rf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9cnt0od06b7ah1jpjae91usd2p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>f6tqn6r91anhi8dckr1te1mu1l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>f8pc72cvfiejok1pavmvq5q8e1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.RESPONSE_CODE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>opnbt9d67kakng5bhde3o91cqt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>20cunpt472o54vhraecm4iuvvq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bdel9m37t673qul2b0qnigqudn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2arkdolv168psgidppp1v82rnq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>itcm58mb2q75gmbja4e5lbrdna</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mrlidc1cnbc9598pr65t7remcm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o4rbnoqvclqa074335tkovhpg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>c3u4mvoqgpauf1r7bqr96ddsc9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5gb5hr1o0ml8d8jrq7sevvta8i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.MOVE_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rrcn2mlinahpfur25qm400tp2s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>3s041ndke3r2e2eekc17uoboep</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6pjac7778i4ldfv0irbkbu71r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>"com.evernote.ACTION_STOP_AUDIO_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2rdfhloi1scnfjni3imdodjuk5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>998pb8k8ni0vi7nk2pbihpmvho</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>hrkisom9dk0kn5hbma4a4r7jsl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.METADATA_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dv9vvp0ph0rfab5mumjr857sah</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>j4girimm5mb4073lmlmgn1fjhv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gfl5qt1rhdirg6rgqm7iu20atl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>97ppi92imd7330vid57jv72bjg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b2u77e1l6b94mbvof5nqoq07dm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vqm7k2pkp25nm5memrrl5j772b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>h46loa2o57vlti51cu4v4ts1nk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p6jr0rferl7abd7o37lg3tlarg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jo1p5vh9edcb21ujn4o0pv298f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vr1ej08jjvorcmm2lvkmpu744d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>rbv931dssaqgug7sv2shi4me19</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rqhnhtrouign13gqp1pcj2a6h2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.MOVE_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4vmdk8ka9fonqmdcssenikkb9d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2oqegrg3gcrknmm80nnt8j959d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.UPDATE_NOTE_TAGS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>m30tj1b8m5fj82uj6eb3ashqn4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>lnic8cakqdotn4lmtkuu2a2k9v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nhfr5vqi9kh6ljjb882fjbfqi5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5vm3a3grnfqjnmjbq5cl1vdlm1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5b461ibcfsd83md9lpm50hsva0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"ACTION_LINK_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ffk815kgpbqfqnlusbstmi6h3b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fa1tdolpccjet0dspmghkoitn2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jbcs2iu46g0hqrptemrb6oscij</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>unubo82jb52e8ala0da0ohp6g5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7vimo9m6m5q8u4vau0v8kdn61c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jrcdk79hf5qfpuvft0ckn4jj68</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qhbtdra6fhi4h1sl8av3n04crb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>dp202p8c7mq23s9sbj4cl1d2b3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>imm89mrq1c9qlduk4p6nf7udbm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4alg2e6djbeh38b39omhcsjs6b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_CAPTCHA"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ontufeplup1opa2cvlu3lko5pf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>j69gp0na0lmesuovihjvn5fk93</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qin0t84rdesn4i6spjtnqitg3u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8s6i6g0eic8ommpuf24sn8bp16</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>594hp44j206q0pp9c66lf4hlck</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fjq6enjadodhtnj6aquehr7nuf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_CAPTCHA"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>itgb44r796oqdfihbahc9mjf1u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>bdivcr9lngb7f283mish6i8b8s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p2sdmph6rb58qergp8n3ug74up</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>obsup22k351u5b1k9j64ujks9t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>"application/zip"</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kn01h2jnvualae05q2t8kipc12</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>91hlpnq7k170uvgnd9fcvopqg9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2hl79csdjvpet7kq4spch1l3sr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4bbn28dpqhdauv366grm5lfn63</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>gd35tb52gpn1lilppqkj9prc1l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8tfed0qqffoiaoleckieain7qf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pe8tabvgdaf7j1nv1hlrg81hjg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>uh7fnkdnag1m5315ipqoqr7n5m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>avfolnqrhi6aflp9drclfpsska</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gnoa6c0h3jrpl9rupqbob59vjq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>aj1e756v20evqo57f3m8lpgghj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7ccl9m2ldrn2dqfo444pq97770</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.TAG_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tmfq3qn5hfreia6v9qjq0b63ee</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hgqg4v7vkf8vmq6k6gu0i9aao</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2kikp86p7ensir06lvpqmkikn1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cq80dtulr2djlq7h9fgmknqe34</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2oa6796u8o5l5dv9ukei4572sq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>872s36oau221344r285otc8cr3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>olh55k349btqulta7m9e667s25</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>t2nim3kubvhtncfch2o5gjh1q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>uorqq9k45cd0u895b1cvqmbva0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ah31eeq7esnaes35ismgvmh78p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.evernote.billing.GET_PURCHASE_INFORMATION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rsiedkhvp6umo6leg4giemei4g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>95go1u2304n4gp6b5cp4nf7hbd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>s0qi4vs0ak9ho1jsjf5q2aes8v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dbdrbvktgna9kn19a4398fbh69</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>20fqbdh35llilopivtrsemk5dc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jqf9jrd3b8u81mlcu1f3retd5v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8okl7s21l7om92r1tc2s44l7r1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_READ_ONLY"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>re63c3vfatirn3pcbpefrjoffa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b5joosajc853a28k2ddtbpnvud</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>v1ms21n08ricrkt6vq2fnfh2h6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>mq68ll0h2atv90ocland6a6kh9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>egvnacobtc2885k6mmvl3i01sn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1h2qgtm3aio43fedeijvnrk2le</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7k90hj3m0lv2roujk9ap1m8mhf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vm9q9kt6jaouppa151r5ccmcla</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gnujqtoenfj2l0t67qidp6nj2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>k2ghh94jhavcrno7q0nrk6iv63</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>8cqru993jvvqjq0pik46re66cn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>a9csrbt67rkccunhc1gcs8k2ig</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gls2p1gub7o8lljcchci15hood</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.METADATA_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8dasbqarkcu20ffp3hfrto888d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uarrtto5l0on1thf1mn331oksl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>iqk8ril024bhvkf074evjfaq0e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>vt3mofkhasrt0ra6g13453mt8l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lo1lu16kk3snfrojq8kuk7vo9h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.METADATA_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>s3t0cekmv5k7j7ei17omkllq1i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_CORRUPTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4mo4jgiv0pi5k6hmsallnpuud1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>praqfrv78263q91q3r6ohccfpb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>8kikhjvvd6ahsihheqc7bngmbd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>igs9s11k87h4dgatbffo2tisgt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pdl1b9vus8i16juut2q1k8nfoo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>acmr8j62r87kedktvv4jh48clg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mrust3ksf8q5d4hb9oh8u1diar</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>oebc8r82i8aucu3hq0kqluoa6m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6fhj7at0uibdln8dam5pkdihfp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.RESPONSE_CODE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>iu6rbpo2a3j9csi6l041q5er42</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a7qvhp4id4cfhrofn898r08323</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pbjvg2aoctdo8cvu01qtfui6dn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>l5aqsedb9oucltrpaaaq53pks8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>v03dsa98uid5nrmrbfso7412c8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bv8cg8l9vhqvnboqjg6j44a0fs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.STOP_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nmmlses6ob94ckf1334prpm4ff</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i8p9psh8l1mbdltjmug19iosvh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2uil10fesvpftrnjso5dtkr2o8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gfq2s73an52angvkpa1h1ljjr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.MOVE_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n70jdk0g79juq6k6mgb4b3r1b7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>shovgv2vfs6dtir47ilhthpb4u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>g0kprcl3l7pdnf6blhkmobtd3a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>oecm31hho8p40d2df63g9tm1ud</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7f8u33kkuts8d79aps9rugjht9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN_PREP_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>o6m07egvcvgmi5hqrpgt44ps2h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>c9l66iuplenels3qg83qea637u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>op8m3p1tgbotr0juvlegj8atj9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>k7n3jp78kidid2o6gogegkikn8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>26bi3q8r9nm1ivt61orra2cmmh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>69p5i3fgucj08jh6dkt0hl7n6u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>j7s5hh37b9vbm1roo6536mha2m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gd8koatb5jbvlj58nttqcjmt5r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>"com.evernote.ACTION_STOP_AUDIO_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6dp066ethpnsdgl7d1ju8rnm25</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kdsa0kkjca21662q86elu70fdt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ove3tj85e85opr34lvc6f9c8rd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tfs0p0690h6q25ntmjk39urlsn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>q8pfchlnk17t4qv7ebq280ev8u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>smnhhrp81rmiltq2v903a664n7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>r2dhe30ter6hvi4qpu83a5ug6a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l9u57oj6md2dlmd95lsnnrivl5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>550vds2rud44hdelb56g3p5p4r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rb0a4vnfnrkvdh5gmu0olmsl4k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b2f2fvtoro069q1qabasm69jqm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>b9fi3nttf9pre0vc5uj8u49hmh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>an6h53fk26k3rqk3aabu29dh93</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>fc9bhiojrtmvk222pirdmjhvn8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>24psl4s9f7ris5iigra09tfoo1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>o2g92iqmasfcvl5ckh315ndigr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>o64ug5kbt4bde5p65ctvgoe6om</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hklo9b0d3kaa76dkdu40q1d60i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dubvig0vtmkrns4b9n6o80n4qh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>q68sa3rho4p2im022pnckv9445</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tctkhanua9aejpt48iiuq7j2b5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_CACHE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>c48gtgapo4iu8k4cvanpjshe2a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lkohi467176tg7cr2ap8rpp5ht</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>13jrjtc0v4fsjgtpvetf9hfdga</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.evernote.billing.GET_PURCHASE_INFORMATION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vilmkvoq6pun46fns03upbnmui</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"android.intent.action.MEDIA_SCANNER_SCAN_FILE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>bgjeivm4jklov2ogfl85fladqu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>2dvti17pp62prpba22mtclkjo0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>gtvnd8q25cqb6bnt5v72rlqa1p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>tu5du5eru9l01hicqsubi0anlo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pqtr4uv9jkchmhq24bcjp5amh7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5kk4caplsj4bl1t1ujf4afj7ob</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u9mj0qt69a1nfor4uhc45c9cvm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5121u19h04163rq4lq98oaugjl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>49t6r0gpo16lur7ad69i1a1g6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cv69muoe0vjjv5o2adv2cffu5j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.TAG_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ae6hiu6647762ppgou4irshtsl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7uccuepjga6n52d4nemgqfnmmq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>110putqqh2s6ja8gffjt2bvi10</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>b1029bg7okcsmak1ng5c4feqea</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>sttha4foqo0fcntb0i0d9euf7v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>m16p6irrpfdfr1etac80uhhqlu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>oa434c9tlqavegclesj39al0qn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dfa3vtpc33s3ccppbg9g8rvj5t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vf4d1h9u993n80obl2jgbt4flt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h7qdd6qq7e0ar75stuc4319qmo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.UPDATE_NOTE_TAGS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>m8p029v30pbfji2khgmatjgpjs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fsljimc7sj61k9u3g8oj2utros</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>n7dnm3ljjtirtt21ik3dlrjbie</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>knjil403dvhaaakr6hf7bmj40g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5a2tvuj37q45r81hbmksfh4v0j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3hqbckvpgeisvqkgasjvl1tjuf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>p1u10cl6bh7qopscl8t78ocidk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>4649buhcgm8bb9r7htg39m82gq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>35r65cks8j9en7ldc9vjgeo2r4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hqi7knivkho7k492381p7m5kh5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pnkfoevgj1uspaopq5g4mdeges</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>temlffjgv89eommr16tfjkndkc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s9lcmje0ol4ul7s7i1qgob6u2h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>j8fm926224ascdrm3iq4oa498i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_CAPTCHA"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>27k5hfaulr4vba5vuct6phi0o6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pi021oj48gom2f129mbh75r653</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rhajgamng065kchjl1p7dkimh3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>ik246rt5sorsie4erkpr0a9u7d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jv2b4v67hmqlebkcqafmo6d0nd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l2h7ctkab3i6es2gd5ggk2fq98</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8gc4sbf4l0f85u2ls6otbqkqok</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>kbudennbjdhj418cqberbgsfm1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ksurqdkisjtep8jr0erafjtlc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3rj97fvjtd4cfha8b87ul69aid</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>45vpv1rpvdjdlk651cva5jq0fp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN_PREP"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>f00uksc87c6sei4m0grnp00cgd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>s2kqcpv8uahr2pgja5l2qdep6p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.STOP_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l0ncq57ketmtnik4n6jcer2hn5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>msosv0bamlp780ovakof113967</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>jd7gf86mg0djb1trvivnheikv6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>54l8hn8lh83tf69tcuckfig2de</id>
            <random/>
        </Intent>
    </newIntents>
    <ContentProviders>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean c(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: boolean a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: java.lang.String c(android.net.Uri)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.dg: com.evernote.ui.helper.dj b(android.app.Activity,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: com.evernote.e.c.i a(android.content.Context,android.database.Cursor,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: com.evernote.ui.helper.be a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: android.net.Uri d(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.b: android.graphics.Bitmap a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r22</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r13</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r37</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r1</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EmailPickerFragment: android.database.Cursor a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r37</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.a.d: void e(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.List g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.z)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(android.content.Context,android.net.Uri)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.n: void a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookShareSettingsActivity: java.lang.String d(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int b(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.maps.EvernoteMapActivity: void e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(android.content.Context,java.lang.String,java.lang.String,int,com.evernote.client.t)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: void h(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: void g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.d: void b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.an: boolean c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.x)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: boolean a(int,com.evernote.ui.helper.ah)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.o)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: boolean b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(android.content.Context,java.lang.String,int,com.evernote.client.t,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void f(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void c(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: long f(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.WidgetProviderService: java.util.Set a(android.content.Context,int,android.widget.RemoteViews,int,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int b(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: int a(android.content.Context,java.lang.String,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: com.evernote.ui.helper.bx a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: void a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void c(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.AdvanceSearchSelectorFragment: void E()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.a.d: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void c(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void e(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: java.util.Map c(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean c(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,java.lang.String,boolean,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.util.List b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: boolean c(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: java.lang.String a(android.content.ContentResolver,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void q()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r27</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,java.lang.String,boolean,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void a(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.o: com.evernote.e.c.i b(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean d(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.String d(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String c(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r16</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment$28: java.lang.String doInBackground(java.lang.Void[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.util.Collection,java.lang.String,com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r16</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.StringBuilder c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r2</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r13</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.maps.s: int a(com.evernote.ui.helper.bp,com.google.android.maps.MapView)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String e(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean d(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.util.List b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.b: int d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: com.evernote.ui.helper.bx a(android.content.Context,android.net.Uri,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: android.app.Dialog V()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.StringBuilder b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>a</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EmailActivity: void f()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void a(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void b(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NewNoteActivity: void u()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: int a(android.content.Context,java.lang.String,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r8</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,boolean,boolean,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.WidgetProviderService: java.util.Set a(android.content.Context,int,android.widget.RemoteViews,int,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r12</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,boolean,boolean,com.evernote.client.m,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.a.d: void f(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ai: android.database.Cursor a(java.lang.CharSequence)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,com.evernote.e.c.g,java.lang.String,com.evernote.client.m)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void d(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ai: android.database.Cursor a(java.lang.CharSequence)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.d: void b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.u: void a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.io.File)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.JSKeywordSearchInfo: void init(android.net.Uri,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: android.content.ContentValues a(com.evernote.client.Draft,byte[],long,long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment$28: java.lang.String doInBackground(java.lang.Void[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: java.util.Map c(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$z2</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r2</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void b(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r13</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.util.Collection,com.evernote.client.m,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.SearchFragment: android.database.Cursor c(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: boolean a(int,com.evernote.ui.helper.ah)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: boolean b(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean d(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: com.evernote.e.c.i a(android.content.Context,android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean e(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.ArrayList a(android.app.Activity,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.JSKeywordSearchInfo: java.util.List getResourceHightableImages()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void a(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: boolean e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.RateAppActivity: boolean a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String e(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.StringBuilder a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,long)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.Evernote: boolean c(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r22</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.dg: com.evernote.ui.helper.dl d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.an: java.lang.String b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void e(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.io.File)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.List b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: android.database.Cursor a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.List a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: android.app.Dialog V()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.be: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void b()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void l()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.lang.StringBuilder e(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: com.evernote.e.c.i a(android.content.Context,android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: com.evernote.e.c.g b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: java.lang.String a(android.content.Context,java.lang.String,boolean,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: java.lang.String a(android.content.Context,java.lang.String,boolean,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: int a(android.app.Activity)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: java.lang.String a(android.content.ContentResolver,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void b(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void c(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,com.evernote.e.c.g,com.evernote.client.m,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.o,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean a(int,com.evernote.ui.helper.ah)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.maps.EvernoteMapActivity: void e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void a(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>0</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$14: com.evernote.e.c.g doInBackground(android.net.Uri[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void a(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void n()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(android.content.Context,java.lang.String,int,com.evernote.client.t)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void e(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r37</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: boolean j(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List j()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r12</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,com.evernote.client.m,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean j(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r2</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: void h(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.x)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: java.lang.String b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.o,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean p(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: boolean c(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void k()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean b(android.content.Context,java.lang.String,java.lang.String,int,com.evernote.client.t)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void m()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void d(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.k)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.an: boolean a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NewNoteActivity: void onActivityResult(int,int,android.content.Intent)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: java.util.List a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r8</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r1</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean d()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r1</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EmailPickerFragment: android.database.Cursor a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.ArrayList a(android.app.Activity,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.k)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.b: void &lt;init&gt;(android.content.Context,android.net.Uri,int,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void b(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: boolean aa()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void b(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: void a(android.net.Uri,android.net.Uri)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean r()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: void h(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void a(int,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.AdvanceSearchSelectorFragment: void E()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
    </ContentProviders>
    <usesPermissions>
        <permission>WRITE_EXTERNAL_STORAGE</permission>
        <permission>READ_LOGS</permission>
        <permission>BILLING</permission>
        <permission>INTERNET</permission>
        <permission>GET_ACCOUNTS</permission>
        <permission>READ_DATA</permission>
        <permission>RECORD_AUDIO</permission>
        <permission>ACCESS_FINE_LOCATION</permission>
        <permission>INSTALL_SHORTCUT</permission>
        <permission>ACCESS_COARSE_LOCATION</permission>
        <permission>WRITE_DATA</permission>
        <permission>ACCESS_NETWORK_STATE</permission>
        <permission>READ_PHONE_STATE</permission>
        <permission>WAKE_LOCK</permission>
        <permission>READ_CONTACTS</permission>
        <permission>VIBRATE</permission>
        <permission>ACCESS_WIFI_STATE</permission>
    </usesPermissions>
    <actuallyUsesPermissions>
        <permission>WAKE_LOCK</permission>
        <permission>RECORD_AUDIO</permission>
        <permission>ACCESS_NETWORK_STATE</permission>
        <permission>ACCESS_WIFI_STATE</permission>
        <permission>ACCESS_FINE_LOCATION</permission>
        <permission>ACCESS_COARSE_LOCATION</permission>
        <permission>VIBRATE</permission>
        <permission>READ_PHONE_STATE</permission>
        <permission>GET_ACCOUNTS</permission>
        <permission>INTERNET</permission>
    </actuallyUsesPermissions>
    <requiredPermissions/>
    <apkFile>../../../app_repo/bundle/Evernote.apk</apkFile>
    <name>Evernote</name>
</application>
